#!/bin/bash
###################################################################
#  All Emoncms code is released under the GNU Affero General Public License.
#  See COPYRIGHT.txt and LICENSE.txt.
#  ---------------------------------------------------------------------
#  Emoncms - open source energy visualisation
#  Part of the OpenEnergyMonitor project: http://openenergymonitor.org
###################################################################
# This script is intended to prepare SD card partitioning as follows;
# * Calculate partitioning to accomodate a Data partition
# * Create a data partition
# * Expand the root partition to a preset size
# * Install a suitable file system to the data partition
# * Expand the root filesystem
#
# Author:    Paul Reed
# Credits:   Kevin Reed (Dweeber)
#            jojopi on Raspberry Pi Forum who provided sample code
#            MrEngman on Raspberry Pi Forum for testing
#            Examples from http://github.com/asb/raspi-config
#
###################################################################
if [ $(id -u) -ne 0 ]; then
  printf "Script must be run as root. Try 'sudo ./sdpart'\n"
  exit 1
fi
###################################################################
echo
PART_END="$(($(blockdev --getsz /dev/mmcblk0)))"
DATA_START="$(parted /dev/mmcblk0 -ms unit s p | grep "^3" | cut -f2 -d: | sed 's/[^0-9]*//g')"
[ "$DATA_START" ] || exit 1
# Create smaller data partition for 4Gb cards
if [ $PART_END -lt 10485760 ]
then
# Creates a 300Mb data partition and 10Mb buffer
DATA_END="$(((PART_END)-20480))"
else
# Creates a 1Gb data partition and 50Mb buffer
DATA_END="$(((PART_END)-102400))"
fi
###################################################################
# Display current SD card data
echo ======================================================
echo
echo Current Disk Info:
fdisk -l /dev/mmcblk0
echo
echo ======================================================
echo
echo Proposed changes to be made:
echo " SD card total disk size = "$(python -c "print $PART_END * 512.0 / 1073741824")"Gb"
echo " Data Partition size     = "$(python -c "print ($DATA_END - $DATA_START + 1) * 512.0 / 1073741824")"Gb"
echo
read -r -p "Are you sure you want to proceed? [Y/n] " response
if [[ $response =~ ^([nN][oO]|[nN])$ ]]
then
exit 1
else
rpi-rw
###################################################################
# Create a systemd unit file to extend filesystem after a reboot
cat <<\EOF > /lib/systemd/system/resize2fs_once.service &&
[Unit]
Description=Resize2fs_once Service

[Service]
Type=idle
ExecStart=/home/pi/resize2fs_once.sh > /home/pi/resize2fs_once.log 2>&1
StandardOutput=null
TimeoutStartSec=infinity

[Install]
WantedBy=multi-user.target
Alias=resize2fs_once.service

EOF
###################################################################
# Enable the unit file so it runs after a reboot
systemctl enable resize2fs_once.service
#
# Fdisk will now make the changes..
umount /dev/mmcblk0p3
printf "d\n3\nn\np\n3\n$DATA_START\n$DATA_END\np\nw\n" | fdisk /dev/mmcblk0
echo
###################################################################
echo Setting up a resize2fs_once script
cat <<\EOF > /home/pi/resize2fs_once.sh &&
#!/bin/sh
    log_daemon_msg "Starting resize2fs_once script"
    umount /dev/mmcblk0p3
    e2fsck -yf /dev/mmcblk0p3
    resize2fs -f /dev/mmcblk0p3
    rpi-rw
    rm /lib/systemd/system/resize2fs_once.service
    systemctl disable resize2fs_once.service
    /bin/sync
    /sbin/shutdown -h now
    
EOF
###################################################################
# Make the resize2fs_once script executable
chmod +x /home/pi/resize2fs_once
echo
echo ######################################################################
echo So far, so good... your system will now reboot and will then check and
echo expand your /home/pi/data filesystem to fill your SD card.
echo THIS WILL TAKE UP TO 10 MINUTES OR SO!
echo You will know when this has been completed, because your Pi will
echo 'poweroff' and close down.
echo ######################################################################
/bin/sync
/sbin/reboot
fi
###################################################################
# END OF SCRIPT
###################################################################
